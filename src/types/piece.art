;===============================================
; Fianchetto
;
; Chess-aware components, custom types,
; FEN & PGN parsing & more...
; for Arturo
;
; MIT License
; (c) 2024 Yanis ZafirÃ³pulos
;==========================================================
; @file: src/types/piece.art
;==========================================================

;------------------------------
; Type definition
;------------------------------

define :chessPiece ::

    ;------------------------------
    ; Constructor
    ;------------------------------

    init: method [
        ch :char :literal :string   ; e.g. "p", 'p', 'p
    ][
        pc: to :string (string? ch)? -> first ch -> ch

        \color: switch upper? pc -> 'white -> 'black
        \kind: to :literal lower pc
        
        ensure.that:"Piece is valid" -> in? \kind ['p 'n 'b 'r 'q 'k]
    ]

    ;------------------------------
    ; Methods
    ;------------------------------

    white?: method [][
        \color = 'white
    ]

    ;------------------------------
    ; Magic
    ;------------------------------

    string: method [][
        pieceChar: to :string \kind
        if \white? [ 
            pieceChar: upper pieceChar 
        ]
        pieceChar
    ]